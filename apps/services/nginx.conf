events {
    worker_connections 1024;
}

http {
    # Rate Limiting Zone
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;

    # Request Size Limiting
    client_max_body_size 10M;

    upstream authService {
        server localhost:AUTH_PORT; # Replace with your authentication service address
    }

    upstream userService {
        server localhost:USER_PORT; # Replace USER_PORT with the actual port
    }

    upstream orderService {
        server localhost:ORDER_PORT; # Replace ORDER_PORT with the actual port
    }

    upstream dashboardService {
        server localhost:DASHBOARD_PORT; # Replace DASHBOARD_PORT with the actual port
    }

    server {
        listen 8080;

        # SSL/TLS Settings
        # Uncomment and update the following lines if you have SSL certificates
        # listen 443 ssl;
        # ssl_certificate /path/to/your/certificate.pem;
        # ssl_certificate_key /path/to/your/private.key;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'HIGH:!aNULL:!MD5';

        location / {
            auth_request /auth;
            error_page 401 403 = @error401;

            # Applying rate limiting
            limit_req zone=mylimit burst=5 nodelay;

            location /user/ {
                rewrite ^/user(/.*)$ $1 break;
                proxy_pass http://userService;
            }

            location /order/ {
                rewrite ^/order(/.*)$ $1 break;
                proxy_pass http://orderService;
            }

            location /dashboard/ {
                rewrite ^/dashboard(/.*)$ $1 break;
                proxy_pass http://dashboardService;
            }
        }

        location /auth {
            internal;
            proxy_pass http://authService/validate;
            proxy_set_header Content-Type "application/json";
            proxy_set_header X-Original-URI $request_uri;
            proxy_pass_request_body on;
        }

        location @error401 {
            return 401;
        }
    }
}
